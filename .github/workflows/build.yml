name: Build

on: [push, pull_request]

jobs:
  build:
    # https://docs.github.com/cn/actions/reference/workflow-syntax-for-github-actions
    # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
    runs-on: ubuntu-20.04
    container: kaiserlancelot/kenv:latest
    strategy:
      matrix:
        # https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html
        build_type: ["Debug", "Release", "RelWithDebInfo", "MinSizeRel"]
        compiler:
          - { cc: "gcc", cxx: "g++" }
          - { cc: "clang", cxx: "clang++" }

    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo bash script/build.sh

      - name: Configure
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DKPKG_BUILD_TEST=ON
        env:
          CC: ${{ matrix.compiler.cc }}
          CXX: ${{ matrix.compiler.cxx }}

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }} -j"$(nproc)"

      - name: Install
        if: ${{ matrix.build_type == 'Release' }}
        run: |
          sudo cmake --build build --config ${{ matrix.build_type }} --target install
          sudo ldconfig

      - name: Run executable
        if: ${{ matrix.build_type == 'Release' }}
        run: |
          kpkg install spdlog
          kpkg list
          kpkg upgrade

      - name: Test
        run: ctest -C ${{ matrix.build_type }} -j"$(nproc)" --output-on-failure
        working-directory: build

      - name: Uninstall
        if: ${{ matrix.build_type == 'Release' }}
        run: sudo cmake --build build --config ${{ matrix.build_type }} --target uninstall
