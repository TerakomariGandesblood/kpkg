name: Sanitizer

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 1 * *"

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        compiler:
          - { cc: "gcc", cxx: "g++" }
          - { cc: "clang", cxx: "clang++" }

    steps:
      - uses: actions/checkout@v2

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: dependencies
          key: sanitizer-dependencies-20210524

      - name: Install dependencies
        run: sudo bash script/build.sh

      - name: Configure
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DKPKG_BUILD_TEST=ON -DKPKG_BUILD_EXTRA_TEST=ON \
          -DKPKG_SANITIZER=ON
        env:
          CC: ${{ matrix.compiler.cc }}
          CXX: ${{ matrix.compiler.cxx }}

      - name: Build
        run: cmake --build build --config RelWithDebInfo -j"$(nproc)"

      - name: Run executable
        run: |
          cd build/tool
          ./kpkg install boost catch2 curl fmt icu libarchive magic_enum \
          openssl rocksdb spdlog sqlite zstd tidy-html5 pugixml
          sudo ldconfig

      - name: Test
        run: cd build ; ctest -C RelWithDebInfo -j"$(nproc)" --output-on-failure
        env:
          # https://clang.llvm.org/docs/AddressSanitizer.html
          ASAN_OPTIONS: detect_stack_use_after_return=1
          # # https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html
          UBSAN_OPTIONS: print_stacktrace=1
