name: Sanitizer

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: kaiserlancelot/kenv:latest
      options: --user root --cap-add SYS_ADMIN --device /dev/fuse --security-opt apparmor:unconfined
    strategy:
      matrix:
        # https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html
        build_type: ["Debug", "Release", "RelWithDebInfo", "MinSizeRel"]
        compiler:
          - { cc: "gcc", cxx: "g++" }
          - { cc: "clang", cxx: "clang++" }

    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: bash script/build.sh

      - name: Configure
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DKPKG_BUILD_TEST=ON -DKPKG_BUILD_EXTRA_TEST=ON \
          -DKPKG_SANITIZER=ON
        env:
          CC: ${{ matrix.compiler.cc }}
          CXX: ${{ matrix.compiler.cxx }}

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }} -j"$(nproc)"

      - name: Run executable
        run: |
          ./kpkg install pyftsubset
          /usr/local/bin/pyftsubset --help
          ./kpkg install boost catch2 curl fmt icu libarchive nameof zstd \
          openssl spdlog sqlcipher tidy-html5 pugixml onetbb cli11 indicators \
          aria2 semver gsl-lite dbg-macro scope_guard argon2 simdjson python
        working-directory: build/tool

      - name: Test
        run: ctest -C ${{ matrix.build_type }} -j"$(nproc)" --output-on-failure
        working-directory: build
