From 434cd7012e4ea4db4d1b86c0af30bdf2cd9c6ce4 Mon Sep 17 00:00:00 2001
From: Kaiser <1244713586@qq.com>
Date: Sun, 27 Mar 2022 16:11:26 +0800
Subject: [PATCH] fix link error

---
 gio/gthreadedresolver.c | 37 +++++++++++++++++++++++++++++--------
 1 file changed, 29 insertions(+), 8 deletions(-)

diff --git a/gio/gthreadedresolver.c b/gio/gthreadedresolver.c
index 48545d6..c32f67e 100644
--- a/gio/gthreadedresolver.c
+++ b/gio/gthreadedresolver.c
@@ -39,6 +39,27 @@
 
 G_DEFINE_TYPE (GThreadedResolver, g_threaded_resolver, G_TYPE_RESOLVER)
 
+static void
+bail (void)
+{
+  fprintf (stderr, "In order to solve the link error, it is assumed that DNS is not used, and it is terminated directly\n");
+  abort ();
+}
+
+static int
+k_dn_expand(const u_char *, const u_char *, const u_char *, char *, int)
+{
+  bail();
+  return 0;
+}
+
+static int
+k_res_nquery(struct __res_state*, const char *, int, int, unsigned char *, int)
+{
+  bail();
+  return 0;
+}
+
 static void
 g_threaded_resolver_init (GThreadedResolver *gtr)
 {
@@ -540,7 +561,7 @@ parse_res_srv (const guint8  *answer,
   GETSHORT (priority, *p);
   GETSHORT (weight, *p);
   GETSHORT (port, *p);
-  *p += dn_expand (answer, end, *p, namebuf, sizeof (namebuf));
+  *p += k_dn_expand (answer, end, *p, namebuf, sizeof (namebuf));
 
   return g_variant_new ("(qqqs)",
                         priority,
@@ -558,8 +579,8 @@ parse_res_soa (const guint8  *answer,
   gchar rnamebuf[1024];
   guint32 serial, refresh, retry, expire, ttl;
 
-  *p += dn_expand (answer, end, *p, mnamebuf, sizeof (mnamebuf));
-  *p += dn_expand (answer, end, *p, rnamebuf, sizeof (rnamebuf));
+  *p += k_dn_expand (answer, end, *p, mnamebuf, sizeof (mnamebuf));
+  *p += k_dn_expand (answer, end, *p, rnamebuf, sizeof (rnamebuf));
 
   GETLONG (serial, *p);
   GETLONG (refresh, *p);
@@ -584,7 +605,7 @@ parse_res_ns (const guint8  *answer,
 {
   gchar namebuf[1024];
 
-  *p += dn_expand (answer, end, *p, namebuf, sizeof (namebuf));
+  *p += k_dn_expand (answer, end, *p, namebuf, sizeof (namebuf));
 
   return g_variant_new ("(s)", namebuf);
 }
@@ -599,7 +620,7 @@ parse_res_mx (const guint8  *answer,
 
   GETSHORT (preference, *p);
 
-  *p += dn_expand (answer, end, *p, namebuf, sizeof (namebuf));
+  *p += k_dn_expand (answer, end, *p, namebuf, sizeof (namebuf));
 
   return g_variant_new ("(qs)",
                         preference,
@@ -699,7 +720,7 @@ g_resolver_records_from_res_query (const gchar      *rrname,
   count = ntohs (header->qdcount);
   while (count-- && p < end)
     {
-      p += dn_expand (answer, end, p, namebuf, sizeof (namebuf));
+      p += k_dn_expand (answer, end, p, namebuf, sizeof (namebuf));
       p += 4;
 
       /* To silence gcc warnings */
@@ -710,7 +731,7 @@ g_resolver_records_from_res_query (const gchar      *rrname,
   count = ntohs (header->ancount);
   while (count-- && p < end)
     {
-      p += dn_expand (answer, end, p, namebuf, sizeof (namebuf));
+      p += k_dn_expand (answer, end, p, namebuf, sizeof (namebuf));
       GETSHORT (type, p);
       GETSHORT (qclass, p);
       p += 4; /* ignore the ttl (type=long) value */
@@ -981,7 +1002,7 @@ do_lookup_records (GTask         *task,
     {
       g_byte_array_set_size (answer, len * 2);
 #if defined(HAVE_RES_NQUERY)
-      len = res_nquery (&res, lrd->rrname, C_IN, rrtype, answer->data, answer->len);
+      len = k_res_nquery (&res, lrd->rrname, C_IN, rrtype, answer->data, answer->len);
 #else
       len = res_query (lrd->rrname, C_IN, rrtype, answer->data, answer->len);
 #endif
-- 
2.32.0

